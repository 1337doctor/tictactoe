import{d as ee,m as v,p as ae,w as E,q as r,e as m,F,s as L,o as y,f as M}from"./vue.esm-bundler-RGxD8kB_.js";const T=c=>{const f=Array(c);for(let s=0;s<c;s++){const d=Array(c).fill(null);f[s]=d}return f},te={class:"ttt-game"},re=["onClick"],ne=["innerHTML"],$=ee({__name:"GameBoard",props:{playerData:{},currentPlayer:{},resetting:{type:Boolean}},emits:["roundWon","boardDiagnostics","changePlayer","resetted"],setup(c,{emit:f}){const s=c,d=f,n=v(T(3)),l=n.value.length,o=v({row:null,col:null}),p=v(Array(l)),g=v(Array(l)),i=v(Array(2));ae(()=>{W()}),E(n,()=>{console.log("aua"),H.value||S(),N.value||Z(),V.value||x()},{deep:!0}),E(()=>s.resetting,()=>{s.resetting&&I()});const H=r(()=>i.value.every(e=>e===!0)),N=r(()=>p.value.every(e=>e===!0)),V=r(()=>g.value.every(e=>e===!0));r(()=>!j.value);const O=r(()=>[...i.value,...p.value,...g.value].filter(e=>e===!1).length);r(()=>n.value.flat().filter(e=>e===null).length);const j=r(()=>O.value<2),J=r(()=>k(o.value.row||0)),K=r(()=>R(o.value.col||0)),w=r(()=>{const e=Array(),t=Array();for(let a=0;a<l;a++)e.push(n.value[a][a]),t.push(n.value[a][l-1-a]);return Array(e,t)}),A=r({get:()=>n.value[o.value.row||0][o.value.col||0],set:e=>{n.value[o.value.row][o.value.col]=e}}),Q=r(()=>B(o.value.row,o.value.col)),C=r(()=>P(J.value)||P(K.value)||P(w.value[0])||P(w.value[1])),U=e=>{if(C.value||(o.value={row:e.pos.row,col:e.pos.col},A.value))return!1;A.value=s.currentPlayer.id,C.value?d("roundWon",{pos:o.value,playerId:Q.value.id}):d("changePlayer")},B=(e,t)=>{if(e===null||t===null)return null;const[a]=s.playerData.filter(u=>n.value[e][t]===u.id);return a},P=e=>{for(let t=1;t<e.length;t++)if(e[t-1]===null||e[t-1]!==e[t])return!1;return!0},h=e=>{const t=e.filter(a=>a!==null);for(let a=1;a<t.length;a++)if(t[a-1]!==t[a])return!1;return!0},Y=e=>n.value[e.row][e.col],k=e=>n.value[e],R=e=>{const t=Array(l);for(let a=0;a<l;a++)t[a]=Y({row:a,col:e});return t},Z=()=>{for(let e=0;e<l;e++)p.value[e]=!h(k(e))},x=()=>{for(let e=0;e<l;e++)g.value[e]=!h(R(e))},S=()=>{let e=!1,t=!1;const[a,u]=i.value;a||(e=h(w.value[0]),i.value[0]=!e),u||(t=h(w.value[1]),i.value[1]=!t)},W=()=>{p.value=Array(l).fill(!1),g.value=Array(l).fill(!1),i.value=Array(2).fill(!1)},z=()=>{n.value=T(3)},I=()=>{z(),W(),d("resetted")};return(e,t)=>(y(),m("div",te,[(y(!0),m(F,null,L(n.value,(a,u)=>(y(),m("div",{class:"ttt-row",key:`row-${u}`},[(y(!0),m(F,null,L(a,(le,_)=>{var b;return y(),m("div",{class:"ttt-col",key:`row-${u}_col-${_}`},[M("button",{type:"button",class:"btn-cell",onClick:oe=>U({pos:{row:u,col:_},playerId:s.currentPlayer.id})},[M("span",{class:"ttt-caption",innerHTML:(b=B(u,_))==null?void 0:b.icon},null,8,ne)],8,re)])}),128))]))),128))]))}});$.__docgenInfo={exportName:"default",displayName:"GameBoard",description:"",tags:{},props:[{name:"playerData",required:!0,type:{name:"PlayerData"}},{name:"currentPlayer",required:!0,type:{name:"Player"}},{name:"resetting",required:!0,type:{name:"boolean"}}],events:[{name:"roundWon",type:{names:["RoundWonPayload"]}},{name:"boardDiagnostics",type:{names:["BoardDiagnosticsPayload"]}},{name:"changePlayer"},{name:"resetted"}],sourceFiles:["C:/www/tictactoe/src/stories/gameboard/GameBoard.vue"]};const ue={title:"GameBoard",component:$,tags:["autodocs"],argTypes:{onChangePlayer:{action:"changePlayer"},onRoundWon:{action:"roundWon"}}},D={args:{currentPlayer:{id:1,icon:"&#127876;",name:"X-Mas Tree"},playerData:[{id:1,icon:"&#127876;",name:"X-Mas Tree"},{id:2,icon:"&#127877;",name:"Santa"}]}};var G,q,X;D.parameters={...D.parameters,docs:{...(G=D.parameters)==null?void 0:G.docs,source:{originalSource:`{
  args: {
    currentPlayer: {
      id: 1,
      icon: '&#127876;',
      name: 'X-Mas Tree'
    },
    playerData: [{
      id: 1,
      icon: '&#127876;',
      name: 'X-Mas Tree'
    }, {
      id: 2,
      icon: '&#127877;',
      name: 'Santa'
    }]
  }
}`,...(X=(q=D.parameters)==null?void 0:q.docs)==null?void 0:X.source}}};const ie=["Primary"];export{D as Primary,ie as __namedExportsOrder,ue as default};
